// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetShopApp.DataAccessLayer;

#nullable disable

namespace PetShopApp.DataAccessLayer.Migrations
{
    [DbContext(typeof(PetShopDbContext))]
    partial class PetShopDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PetShopApp.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("tblCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 453, DateTimeKind.Local).AddTicks(9785),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 453, DateTimeKind.Local).AddTicks(9794),
                            Name = "Kedi"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 453, DateTimeKind.Local).AddTicks(9797),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 453, DateTimeKind.Local).AddTicks(9797),
                            Name = "Köpek"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 453, DateTimeKind.Local).AddTicks(9799),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 453, DateTimeKind.Local).AddTicks(9799),
                            Name = "Kuş"
                        });
                });

            modelBuilder.Entity("PetShopApp.Core.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("tblComments", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 100,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(439),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(440),
                            ProductID = 14,
                            Text = "Yorummmmm",
                            UserID = 22
                        },
                        new
                        {
                            Id = 101,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(443),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(443),
                            ProductID = 13,
                            Text = "Yorummmmm",
                            UserID = 22
                        },
                        new
                        {
                            Id = 102,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(445),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(446),
                            ProductID = 13,
                            Text = "Yorummmmm",
                            UserID = 23
                        });
                });

            modelBuilder.Entity("PetShopApp.Core.Models.DiscountedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("DiscountedPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("percent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.ToTable("DiscountedProducts");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrdersNo")
                        .HasColumnType("int");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.HasIndex("UserID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Img")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("SubCategoryID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("SubCategoryID");

                    b.ToTable("tblProducts", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 13,
                            Barcode = "155855578",
                            Brand = "Nutri",
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(160),
                            ExpirationDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(161),
                            Img = "aa",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(162),
                            Name = "Tahılsız Kedi Maması",
                            Price = 250m,
                            Stock = 10,
                            SubCategoryID = 4
                        },
                        new
                        {
                            Id = 14,
                            Barcode = "155855579",
                            Brand = "Nutri",
                            CategoryID = 2,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(175),
                            ExpirationDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(175),
                            Img = "aa",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(176),
                            Name = "Tahılsız Köpek Maması",
                            Price = 150m,
                            Stock = 10,
                            SubCategoryID = 7
                        },
                        new
                        {
                            Id = 15,
                            Barcode = "155955579",
                            Brand = "Nutri",
                            CategoryID = 3,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(181),
                            ExpirationDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(181),
                            Img = "aa",
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(182),
                            Name = "Tahılsız Kuş Yemi",
                            Price = 100m,
                            Stock = 10,
                            SubCategoryID = 10
                        });
                });

            modelBuilder.Entity("PetShopApp.Core.Models.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Feature")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductID");

                    b.ToTable("tblProductFeatures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(257),
                            Feature = "Açıklama 1",
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(258),
                            ProductID = 13
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(260),
                            Feature = "Açıklama 2",
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(261),
                            ProductID = 13
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(262),
                            Feature = "Açıklama 1",
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(263),
                            ProductID = 14
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(264),
                            Feature = "Açıklama 2",
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(265),
                            ProductID = 14
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(266),
                            Feature = "Açıklama 1",
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(267),
                            ProductID = 15
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(268),
                            Feature = "Açıklama 2",
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(269),
                            ProductID = 15
                        });
                });

            modelBuilder.Entity("PetShopApp.Core.Models.SubCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("tblSubCategories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 4,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(50),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(51),
                            Name = "Kedi Maması"
                        },
                        new
                        {
                            Id = 5,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(53),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(54),
                            Name = "Kedi Kumu"
                        },
                        new
                        {
                            Id = 6,
                            CategoryID = 1,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(56),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(56),
                            Name = "Kedi Oyuncakları"
                        },
                        new
                        {
                            Id = 7,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(58),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(58),
                            Name = "Köpek Maması"
                        },
                        new
                        {
                            Id = 8,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(60),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(60),
                            Name = "Köpek Kıyafetleri"
                        },
                        new
                        {
                            Id = 9,
                            CategoryID = 2,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(62),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(63),
                            Name = "Köpek Oyuncakları"
                        },
                        new
                        {
                            Id = 10,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(64),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(65),
                            Name = "Kuş Yemi"
                        },
                        new
                        {
                            Id = 11,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(66),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(67),
                            Name = "Kuş Suluğu"
                        },
                        new
                        {
                            Id = 2,
                            CategoryID = 3,
                            CreatedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(68),
                            IsDeleted = false,
                            ModifiedDate = new DateTime(2022, 5, 30, 10, 56, 2, 454, DateTimeKind.Local).AddTicks(69),
                            Name = "Kuş Vitamini"
                        });
                });

            modelBuilder.Entity("PetShopApp.Core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.ToTable("tblUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 22,
                            Email = "kbrkskn@gmail.com",
                            IsActive = true,
                            IsAdmin = false,
                            LastName = "Keskin",
                            Name = "Kübra",
                            Password = "123456",
                            Phone = "05362879963"
                        },
                        new
                        {
                            Id = 23,
                            Email = "eymen@gmail.com",
                            IsActive = true,
                            IsAdmin = false,
                            LastName = "Keskin",
                            Name = "Eymen",
                            Password = "123456",
                            Phone = "05362879963"
                        },
                        new
                        {
                            Id = 24,
                            Email = "bhrkskn@gmail.com",
                            IsActive = true,
                            IsAdmin = false,
                            LastName = "Keskin",
                            Name = "Bahar",
                            Password = "123456",
                            Phone = "05362879963"
                        });
                });

            modelBuilder.Entity("PetShopApp.Core.Models.Comment", b =>
                {
                    b.HasOne("PetShopApp.Core.Models.Product", "Product")
                        .WithMany("Comments")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShopApp.Core.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.DiscountedProduct", b =>
                {
                    b.HasOne("PetShopApp.Core.Models.Product", "Product")
                        .WithMany("DiscountedProducts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.Order", b =>
                {
                    b.HasOne("PetShopApp.Core.Models.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetShopApp.Core.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.Product", b =>
                {
                    b.HasOne("PetShopApp.Core.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PetShopApp.Core.Models.SubCategory", "SubCategory")
                        .WithMany("Products")
                        .HasForeignKey("SubCategoryID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.ProductFeature", b =>
                {
                    b.HasOne("PetShopApp.Core.Models.Product", "Product")
                        .WithMany("ProductFeatures")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.SubCategory", b =>
                {
                    b.HasOne("PetShopApp.Core.Models.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.Category", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.Product", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("DiscountedProducts");

                    b.Navigation("Orders");

                    b.Navigation("ProductFeatures");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.SubCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("PetShopApp.Core.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
